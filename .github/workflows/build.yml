# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build pteroctl for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: '22.2.0'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: |
          ./gradlew nativeCompile -PgradleDebug=false

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: pteroctl-${{ matrix.os }}
          path: build/native/nativeCompile/pteroctl*

  docker:
    name: Build and Push docker image
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout source
        uses: actions/checkout@v3

      - name: üß∞ Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: ‚öôÔ∏è Generate Docker image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Tag the image as "edge" for every commit on master.
          # Maintain the "latest", full and major and minor semver tags for each semver tag push
          tags: |
            type=edge,branch=master
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          labels: |
            org.opencontainers.image.description=Docker image for pteroctl

      - name: üì• Download pteroctl linux binary
        uses: actions/download-artifact@v3
        with:
          name: pteroctl-ubuntu-latest

        # The GitHub token needs the package:write permission for the push to work.
        # This permission is not given to PRs from forked repositories.
        # See: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
      - name: ‚öô Login to ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        if: steps.check_write_permission.outputs.has-permission
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üî® Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ steps.check_write_permission.outputs.has-permission == '1' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}