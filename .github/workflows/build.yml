on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build pteroctl for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-22.04]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

#      - name: Install musl
#        if: matrix.os == 'ubuntu-latest'
#        run: sudo apt-get install -y musl

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: '22.3.1'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
#          native-image-musl: true

      - name: Build with GraalVM
        run: |
          ./gradlew nativeBuild -PgradleDebug=false

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: pteroctl-${{ matrix.os }}
          path: |
            build/native/nativeBuild/pteroctl
            build/native/nativeBuild/pteroctl.exe

  release:
    name: Create pteroctl release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Collect artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts/

      - name: Show filesystem
        run: ls -R

      - name: Release
        id: create_release
        uses: softprops/action-gh-release@v1
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          generate_release_notes: true
          fail_on_unmatched_files: true
          prerelease: ${{ contains(github.ref, 'rc') || contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}

      - name: Upload Linux binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/pteroctl-ubuntu-latest/pteroctl
          asset_name: pteroctl_glibc2.35_amd64
          asset_content_type: application/octet-stream

      - name: Upload Windows binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/pteroctl-windows-latest/pteroctl.exe
          asset_name: pteroctl_win64.exe
          asset_content_type: application/octet-stream